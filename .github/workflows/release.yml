name: Publish Packages

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*' # Match version tags like v1.0.0

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Setup environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
      
      # Step 3: Install dependencies
      - name: Install npm dependencies
        run: |
          npm ci
          if [ ! -d "${{ github.workspace }}/node_modules/lucide-static/icons" ]; then
            echo "Icons directory is missing. Aborting."
            exit 1
          fi
          ls -lh ${{ github.workspace }}/node_modules/lucide-static/icons

      # Step 4: Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      # Step 5: Export environment path for .NET projects
      - name: Export node_modules path
        run: |
          echo "NODE_PATH=${{ github.workspace }}/node_modules" >> $GITHUB_ENV
          export NODE_PATH=${{ github.workspace }}/node_modules
          echo "NODE_PATH: $NODE_PATH"

      # Step 6: Restore NuGet packages
      - name: Restore NuGet packages
        run: dotnet restore InfiniLore.Lucide.sln

      # Step 7: Build .NET projects
      # Step 7.1: Build InfiniLore.Lucide.Generators.Raw
      - name: Build InfiniLore.Lucide.Generators.Raw
        run: |
          dotnet build src/InfiniLore.Lucide.Generators.Raw/InfiniLore.Lucide.Generators.Raw.csproj \
            --configuration Release

      # Step 7.2: Build InfiniLore.Lucide.Data
      - name: Build InfiniLore.Lucide.Data
        run: |
          dotnet build src/InfiniLore.Lucide.Data/InfiniLore.Lucide.Data.csproj \
            --configuration Release

      # Step 7.3: Build InfiniLore.Lucide
      - name: Build InfiniLore.Lucide
        run: |
          dotnet build src/InfiniLore.Lucide/InfiniLore.Lucide.csproj \
            --configuration Release


      # Step 8: Run tests
      - name: Run tests
        run: dotnet run -c Release --no-restore --no-build --framework net9.0
        working-directory: "tests/Tests.InfiniLore.Lucide"
            
      # Step 9: Publish to NuGet
      - name: Publish to NuGet
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          dotnet nuget push src/InfiniLore.Lucide/bin/Release/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json --skip-duplicate
          dotnet nuget push src/InfiniLore.Lucide.Data/bin/Release/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json --skip-duplicate
          dotnet nuget push src/InfiniLore.Lucide.Generators.Raw/bin/Release/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json --skip-duplicate